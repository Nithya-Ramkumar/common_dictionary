# =============================================================================
# ONTOLOGY REFERENCE
# =============================================================================
# This config should align with ontology.yaml, which defines the entity type hierarchy (taxonomy),
# subdomains, tags, and relationships. Use subclass_of, subtypes, and tags as needed.
#
# Each attribute, when extracted, will include runtime feedback fields:
#   - value
#   - confidence (float, 0-1)
#   - source (string)
#   - version (string)
#   - provenance (dict)
#
# =============================================================================
# ENTITY TYPES DEFINITION
# =============================================================================
chemistry:
  version: "1.1.0"
  domain: chemistry
  
  types:
    - name: Compound
      description: "Chemical compounds and molecules"
      subtypes: [OrganicCompound, Polymer, MetalComplex]
      tags: [core, chemical]
      subdomain: null
      attributes:
        - name: name
          type: string
          required: true
          validation: "string_validation"
          provenance: {}
        # ... other attributes ...
    - name: OrganicCompound
      subclass_of: Compound
      tags: [organic]
      subdomain: organic
      description: "Organic chemical compounds"
      attributes:
        - name: functional_groups
          type: list
          required: false
          validation: "list_validation"
          provenance: {}
    - name: Polymer
      subclass_of: Compound
      tags: [polymer, macromolecule]
      subdomain: organic
      description: "Polymeric chemical compounds"
      attributes:
        - name: monomer_units
          type: list
          required: false
          validation: "list_validation"
          provenance: {}
    - name: MetalComplex
      subclass_of: Compound
      tags: [inorganic, metal]
      subdomain: inorganic
      description: "Metal complexes"
      attributes:
        - name: central_metal
          type: string
          required: true
          validation: "string_validation"
          provenance: {} 